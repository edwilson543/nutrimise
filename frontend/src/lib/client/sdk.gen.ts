// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetHealthGeneralHealthGetData, GetHealthGeneralHealthGetResponses, GetVersionGeneralVersionGetData, GetVersionGeneralVersionGetResponses, ListRecipesRecipesGetData, ListRecipesRecipesGetResponses, ListSavedRecipesRecipesSavedGetData, ListSavedRecipesRecipesSavedGetResponses, SaveRecipeRecipesRecipeIdSavePutData, SaveRecipeRecipesRecipeIdSavePutResponses, SaveRecipeRecipesRecipeIdSavePutErrors, UnsaveRecipeRecipesRecipeIdUnsavePutData, UnsaveRecipeRecipesRecipeIdUnsavePutResponses, UnsaveRecipeRecipesRecipeIdUnsavePutErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Health
 */
export const getHealthGeneralHealthGet = <ThrowOnError extends boolean = false>(options?: Options<GetHealthGeneralHealthGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetHealthGeneralHealthGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/general/health',
        ...options
    });
};

/**
 * Get Version
 */
export const getVersionGeneralVersionGet = <ThrowOnError extends boolean = false>(options?: Options<GetVersionGeneralVersionGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetVersionGeneralVersionGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/general/version',
        ...options
    });
};

/**
 * List Recipes
 */
export const listRecipesRecipesGet = <ThrowOnError extends boolean = false>(options?: Options<ListRecipesRecipesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListRecipesRecipesGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/recipes/',
        ...options
    });
};

/**
 * List Saved Recipes
 */
export const listSavedRecipesRecipesSavedGet = <ThrowOnError extends boolean = false>(options?: Options<ListSavedRecipesRecipesSavedGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListSavedRecipesRecipesSavedGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/recipes/saved',
        ...options
    });
};

/**
 * Save Recipe
 */
export const saveRecipeRecipesRecipeIdSavePut = <ThrowOnError extends boolean = false>(options: Options<SaveRecipeRecipesRecipeIdSavePutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<SaveRecipeRecipesRecipeIdSavePutResponses, SaveRecipeRecipesRecipeIdSavePutErrors, ThrowOnError>({
        responseType: 'json',
        url: '/recipes/{recipe_id}/save',
        ...options
    });
};

/**
 * Unsave Recipe
 */
export const unsaveRecipeRecipesRecipeIdUnsavePut = <ThrowOnError extends boolean = false>(options: Options<UnsaveRecipeRecipesRecipeIdUnsavePutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UnsaveRecipeRecipesRecipeIdUnsavePutResponses, UnsaveRecipeRecipesRecipeIdUnsavePutErrors, ThrowOnError>({
        responseType: 'json',
        url: '/recipes/{recipe_id}/unsave',
        ...options
    });
};